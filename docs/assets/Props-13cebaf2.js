import{o as l,Y as _,w as t,f as o,d as e}from"./index-85d5c705.js";import{E as a,a as i}from"./el-descriptions-item-b1a9bdea.js";/* empty css                                                                  */const c=e("p",null,'在父组件中使用<child :msg="msg"/>向子组件传递参数',-1),p=e("p",null,"在子组件中使用defineProps=['msg']接收参数",-1),d=e("p",null,'在父组件中使用<child :msg="msg"/>向子组件传递参数',-1),r=e("p",null,"在子组件不声明接受的属性，传入的属性会被直接加到子组件的根元素",-1),u=e("p",null,"如果想禁用透传，可以在子组件设置inheritAttrs: false",-1),m=e("p",null,"类似ContextProvider和useContext",-1),h=e("p",null,"在提供数据的组件使用provide(key:any,val:any|any[])函数发布数据",-1),f=e("p",null,"在接收数据的组件使用inject(key:any,defaultValue:any)函数接收数据",-1),y=e("p",null,"可以发布的数据包括函数",-1),C={__name:"Props",setup(g){return(x,k)=>{const s=i,n=a;return l(),_(n,{title:"组件传参",column:1},{default:t(()=>[o(s,{label:"1. 向直接子组件传参"},{default:t(()=>[c,p]),_:1}),o(s,{label:"2. 透传属性"},{default:t(()=>[d,r,u]),_:1}),o(s,{label:"3. 依赖注入"},{default:t(()=>[m,h,f,y]),_:1})]),_:1})}}};export{C as default};

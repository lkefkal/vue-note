import{_ as h}from"./PCodeBlock-8022f343.js";import{V as f,O as N,_ as T,o as c,c as p,i as $,aH as v,e as _,F as y,g as O,t as d,b as i,w as u}from"./index-9eba7189.js";import{a as w,E as I}from"./el-descriptions-item-552f52d1.js";import{P as H}from"./PCodeBlock-b97ad92b.js";import"./CleanCode-1b1e3292.js";var C=Object.defineProperty,P=Object.getOwnPropertyDescriptor,U=(e,t,r,s)=>{for(var o=s>1?void 0:s?P(t,r):t,a=e.length-1,l;a>=0;a--)(l=e[a])&&(o=(s?l(t,r,o):l(o))||o);return s&&o&&C(t,r,o),o};let m=class extends f{get code(){return`
        // ${this.$t("ANNO_1")}
        type HelloWorld = any
        // ${this.$t("ANNO_2")}
        type test = Expect<Equal<HelloWorld, string>>
    `}};m=U([N({components:{PCodeBlock:H},i18n:{messages:{"zh-CN":{QUESTION_TEXT:"这个简单的提问希望让你可以快速上手 Type Challenges。在这里，我们使用了一些神奇的技巧让 TypeScript 通过自身的类型系统来实现自动判题。",REQUIRE_TEXT:"在这个挑战中，你需要修改下方的代码使得测试通过（使其没有类型错误）。",ANNO_1:"期望是一个 string 类型",ANNO_2:"你需要使得如下这行不会抛出异常"},en:{QUESTION_TEXT:"In Type Challenges, we use the type system itself to do the assertion.",REQUIRE_TEXT:"For this challenge, you will need to change the following code to make the tests pass (no type check errors).",ANNO_1:"Expect HelloWorld to be a string",ANNO_2:"You should make the following line no error"}}},mounted(){console.log(this.$i18n.locale),console.log(this.$i18n.messages)}})],m);const W={class:"ctn"},A=["value"];function D(e,t,r,s,o,a){const l=w,E=I,g=h;return c(),p("div",W,[$(_("select",{"onUpdate:modelValue":t[0]||(t[0]=n=>e.$i18n.locale=n),class:"ctn-selector"},[(c(!0),p(y,null,O(e.$i18n.availableLocales,n=>(c(),p("option",{key:`locale-${n}`,value:n},d(n),9,A))),128))],512),[[v,e.$i18n.locale]]),i(E,{column:1,title:"Hello World"},{default:u(()=>[i(l,null,{default:u(()=>[_("p",null,d(e.$t("QUESTION_TEXT")),1)]),_:1}),i(l,null,{default:u(()=>[_("p",null,d(e.$t("REQUIRE_TEXT")),1)]),_:1})]),_:1}),i(g,{code:e.code,title:"template",toc:"language-typescript"},null,8,["code"])])}const B=T(m,[["render",D],["__scopeId","data-v-52108693"]]);export{B as default};
